name: Polaris
on:
  pull_request:
    branches: [ main, master, develop, stage, release ]  
  workflow_dispatch:
jobs:
  polaris-scan:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: microsoft
          cache: maven
      - name: Polaris Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2.0.0
        with:
          polaris_server_url: ${{ vars.POLARIS_SERVER_URL }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_application_name: "FCBR" #${{ github.event.repository.name }}
          polaris_project_name: "hello-java" # ${{ github.event.repository.name }}
          polaris_branch_name: "github"
          polaris_assessment_types: "SCA,SAST"
          polaris_test_sca_type: "SCA-PACKAGE,SCA-SIGNATURE"
          # polaris_waitForScan: false
          # polaris_assessment_mode: "SOURCE_UPLOAD"
          polaris_reports_sarif_create: true  
          polaris_reports_sarif_groupSCAIssues: true 
          polaris_reports_sarif_issue_types: 'SCA, SAST' 
          polaris_upload_sarif_report: true 
          github_token: ${{ secrets.GH_TOKEN }} # Required when polaris_upload_sarif_report is set as true
          ### Uncomment below to add arbitrary CL parameters
          # coverity_build_command: mvn clean install
          # coverity_clean_command: mvn clean
          # coverity_config_path: /Users/Config/coverity.yml
          # coverity_args: --enable-audit-mode
          # detect_search_depth: 2
          # detect_args: '--detect.diagnostic=true'
          # detect_config_path: '/Users/Config/application.properties'
          
      - name: Polaris PR Scan
        if: ${{ github.event_name == 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2.0.0
        with:
          polaris_server_url: ${{ vars.POLARIS_SERVER_URL }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_application_name: "FCBR" #${{ github.event.repository.name }}
          polaris_project_name: "hello-java" # ${{ github.event.repository.name }}
          polaris_assessment_types: "SCA,SAST"
          # project_directory: ${{ vars.PROJECT_DIRECTORY }}
          ### Uncomment below configuration for source code upload 
          # polaris_assessment_mode: "SOURCE_UPLOAD"
          # project_source_archive: ${{ vars.PROJECT_SOURCE_ARCHIVE }}
          # project_source_excludes: ${{ vars.PROJECT_SOURCE_EXCLUDES }} # Accepts Multiple Values
          # project_source_preserveSymLinks: true
          ### Below configuration is used to enable feedback from Polaris security testing as pull request comment
          polaris_prComment_enabled: true 
          github_token: ${{ secrets.GH_TOKEN }} 
          # Mandatory when polaris_prComment_enabled is set to 'true'
          ### Uncomment below configuration if Bridge diagnostic files needs to be uploaded
          # include_diagnostics: true
